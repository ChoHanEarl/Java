package ex03_operator;

public class Ex06_Operator {
	public static void main(String[] args) {
		//비트연산자
		//논리연산자와 유사하지만 bit단위(2진수)의 연산만 가능하다.
		//일반적으로 시프트연산자와 더불어 암호화, 복호화 작업에 사용된다.
		
		//& 논리곱	두 항이 모두 1이면 1, 아니면 0
		//| 논리합	두 항 중 하나라도 1이면 1, 아니면 0
		//^ 배타적논리합	두 항이 달라야 1, 같으면 0
		//~ 부정		1을 0으로, 0을 1로 연산
		
		int a = 10; //2진수로 바꾸면 1010
		int b = 7; //2진수로 바꾸면 0111
		
		int c = a & b; // 1010과 0111 중 모두 1인 자릿수는 10의자리. 이를 10진수로 바꾸면 2
		System.out.println(c);
		
		c = a | b;// 1010과 0111중 하나라도 1이면 포함이므로 모두 포함. 8 + 4 + 2 + 1 = 15
		System.out.println(c);
		
		c = a ^ b; // 두 항이 달라야 1이므로 1101 -> 13
		System.out.println(c);
		
		//~(not연산)
		//2진수로는 음수를 표현할 수 없다.
		//비트의 맨 앞자리는 수의 표현이 아닌 부호의 표현으로 쓰기로 약속을 했다.
		//0이면 양수, 1이면 음수
		
		int x = 7;//0111
		//-(x+1)
		System.out.println(~x);
		
	}
}
